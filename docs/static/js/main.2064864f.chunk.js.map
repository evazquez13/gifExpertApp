{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGrifItems.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGrifItems","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","categoria","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETC,EAFS,iDAEwCC,UAAUH,GAFlD,+DAGII,MAAMF,GAHV,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAX3B,kBAgBRM,GAhBQ,4CAAH,sDCCPO,EAAe,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IACnC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIrB,CAACpB,IAEGqB,EDhBiBK,CAAa1B,GAA9BO,EAAP,EAAOA,KAAP,EAAaa,QAEb,OACI,qCACI,oBAAIJ,UAAU,2CAAd,SAA0DhB,IAC1D,qBAAKgB,UAAU,+CAAf,SAEQT,EAAKE,KAAK,SAAAC,GAAG,OAAK,cAAC,EAAD,eAEUA,GADCA,EAAIC,aEYtCgB,EAtBM,WAEjB,MAAoCzC,mBAAS,CAAC,gBAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAoB,GAAS,OACpB,cAAC,EAAD,CAEI7B,SAAU6B,GADLA,Y,MCVjCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2064864f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputValue = (e) =>{\n        setInputValue(e.target.value);\n    }\n    \n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputValue}\n            />            \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories:PropTypes.func.isRequired\n}\n","\nexport const getGifs = async( category ) =>{\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=EnAdaWCYOMyba10mYzqawmb2BaZDC0jX`;\n        const resp = await fetch(url);\n        const {data} = await resp.json();\n\n        const gifs = data.map(img => {\n\n            return{\n                id:img.id,\n                title:img.title,\n                url: img.images?.downsized_medium.url\n            }\n\n        })\n\n        return gifs;\n\n    }","import React from 'react'\n\nexport const GifGrifItems = ({id,title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGrifItems } from './GifGrifItems';\n\nexport const GifGrid = ({category}) => {\n\n    const {data, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeInDownBig\">{category}</h3>\n            <div className=\"card-grid animate__animated animate__flipInY\">\n                {\n                    data.map( img => (<GifGrifItems\n                                            key={img.id}\n                                            {...img}/>))\n                }\n                \n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setstate] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect(() => {\n        \n        getGifs(category)\n            .then( imgs => {\n                setstate({\n                    data:imgs,\n                    loading:false\n                });\n            });\n\n    }, [category]);\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Dragon Ball']);\n    \n    return (\n        <>            \n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n            <ol>\n                {\n                    categories.map(categoria => (\n                        <GifGrid \n                            key={categoria}\n                            category={categoria}/>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}